{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PayRox Go Beyond Manifest Schema",
  "description": "JSON schema for PayRox NON-STANDARD diamond manifest files with cryptographic route verification using ordered-pair Merkle proofs and isolated facet storage",
  "type": "object",
  "required": ["header", "epoch", "root", "routes"],
  "properties": {
    "header": {
      "type": "object",
      "required": [
        "version",
        "versionBytes32",
        "timestamp",
        "deployer",
        "chainId",
        "previousHash"
      ],
      "properties": {
        "version": {
          "type": "string",
          "description": "Human-readable release tag (e.g., 'v1.2.3')",
          "pattern": "^v?[0-9]+\\.[0-9]+\\.[0-9]+([.-][a-zA-Z0-9]+)*$"
        },
        "versionBytes32": {
          "type": "string",
          "description": "32-byte hash of version string",
          "pattern": "^0x[0-9a-fA-F]{64}$"
        },
        "timestamp": {
          "type": "integer",
          "description": "Unix timestamp of manifest creation",
          "minimum": 0
        },
        "deployer": {
          "type": "string",
          "description": "Ethereum address of authorized deployer",
          "pattern": "^0x[0-9a-fA-F]{40}$"
        },
        "chainId": {
          "type": "integer",
          "description": "Target blockchain chain ID",
          "minimum": 1
        },
        "previousHash": {
          "type": "string",
          "description": "Hash of previous manifest for upgrade chain",
          "pattern": "^0x[0-9a-fA-F]{64}$"
        }
      }
    },
    "epoch": {
      "type": "integer",
      "description": "Monotonic on-chain version number",
      "minimum": 0
    },
    "root": {
      "type": "string",
      "description": "Merkle root of all routes using ordered-pair hashing",
      "pattern": "^0x[0-9a-fA-F]{64}$"
    },
    "routes": {
      "type": "array",
      "description": "Array of function routes with cryptographic Merkle proofs for NON-STANDARD diamond architecture (isolated facet storage, no shared state)",
      "items": {
        "type": "object",
        "required": ["selector", "facet", "codehash", "proof", "positions"],
        "properties": {
          "selector": {
            "type": "string",
            "description": "4-byte function selector (8 hex characters)",
            "pattern": "^0x[0-9a-fA-F]{8}$"
          },
          "facet": {
            "type": "string",
            "description": "Ethereum address of isolated facet contract (NON-STANDARD: no shared storage with other facets)",
            "pattern": "^0x[0-9a-fA-F]{40}$"
          },
          "codehash": {
            "type": "string",
            "description": "Expected EXTCODEHASH of facet for security validation (64 hex characters)",
            "pattern": "^0x[0-9a-fA-F]{64}$"
          },
          "proof": {
            "type": "array",
            "description": "Array of sibling hashes for Merkle proof",
            "items": {
              "type": "string",
              "description": "32-byte hash (64 hex characters)",
              "pattern": "^0x[0-9a-fA-F]{64}$"
            }
          },
          "positions": {
            "type": "string",
            "description": "Bitfield encoding sibling positions (LSB-first)",
            "pattern": "^0x[0-9a-fA-F]+$"
          }
        }
      }
    }
  }
}
