#!/usr/bin/env node

/**
 * PayRox Developer Portal Launcher
 * 
 * This script opens the PayRox Developer Portal in your default browser
 * and provides a visual interface for developers to deploy contracts.
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');
const http = require('http');

console.log(`
üöÄ PayRox Developer Portal Launcher
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Starting visual developer interface...
`);

async function launchPortal() {
  try {
    const portalPath = path.join(__dirname, 'developer-portal.html');
    
    if (!fs.existsSync(portalPath)) {
      throw new Error('Developer portal not found. Please ensure developer-portal.html exists.');
    }
    
    console.log('‚úÖ Developer portal found');
    console.log('üåê Opening in your default browser...\n');
    
    // Create a simple HTTP server to serve the portal
    const server = http.createServer((req, res) => {
      if (req.url === '/' || req.url === '/index.html') {
        const html = fs.readFileSync(portalPath, 'utf8');
        res.writeHead(200, { 'Content-Type': 'text/html' });
        res.end(html);
      } else {
        res.writeHead(404, { 'Content-Type': 'text/plain' });
        res.end('Not found');
      }
    });
    
    const port = 3333;
    server.listen(port, () => {
      const url = `http://localhost:${port}`;
      console.log(`üåê PayRox Developer Portal running at: ${url}`);
      console.log(`
üìã Features Available:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üéØ VISUAL CONTRACT DEPLOYMENT
   ‚Ä¢ Deploy ERC20 tokens with visual interface
   ‚Ä¢ Real-time address calculation before deployment
   ‚Ä¢ Fixed 0.0007 ETH deployment fee
   ‚Ä¢ Deterministic addresses (same inputs = same address)

üîó WALLET INTEGRATION  
   ‚Ä¢ Connect MetaMask or any Web3 wallet
   ‚Ä¢ One-click contract deployment
   ‚Ä¢ Real-time transaction status

üìä SYSTEM DASHBOARD
   ‚Ä¢ Live PayRox infrastructure status
   ‚Ä¢ Contract deployment history
   ‚Ä¢ Network and fee information

üõ†Ô∏è DEVELOPER TOOLS
   ‚Ä¢ Address calculator
   ‚Ä¢ Gas estimator
   ‚Ä¢ Contract verifier
   ‚Ä¢ SDK integration guide

üìö DOCUMENTATION ACCESS
   ‚Ä¢ Complete developer guide
   ‚Ä¢ API documentation
   ‚Ä¢ Code examples and tutorials
   ‚Ä¢ Quick reference guide

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üéä READY FOR DEVELOPERS! üéä

The PayRox ecosystem now provides:
‚úÖ Production-ready smart contracts (deployed & operational)
‚úÖ Complete TypeScript SDK for integration
‚úÖ Visual developer portal for easy deployment
‚úÖ Comprehensive documentation suite
‚úÖ Fixed pricing (0.0007 ETH per deployment)
‚úÖ Deterministic addresses for predictable dApps

Press Ctrl+C to stop the server when you're done.
      `);
      
      // Try to open the browser automatically
      try {
        const isWindows = process.platform === 'win32';
        const isMac = process.platform === 'darwin';
        
        if (isWindows) {
          execSync(`start ${url}`, { stdio: 'ignore' });
        } else if (isMac) {
          execSync(`open ${url}`, { stdio: 'ignore' });
        } else {
          execSync(`xdg-open ${url}`, { stdio: 'ignore' });
        }
      } catch (error) {
        console.log(`\nüìñ Couldn't auto-open browser. Please manually visit: ${url}`);
      }
    });
    
    // Handle graceful shutdown
    process.on('SIGINT', () => {
      console.log('\n\nüõë Shutting down PayRox Developer Portal...');
      server.close(() => {
        console.log('‚úÖ Server stopped. Thanks for using PayRox!');
        process.exit(0);
      });
    });
    
  } catch (error) {
    console.error('\n‚ùå Failed to launch portal:', error.message);
    console.log('\nüõ†Ô∏è Troubleshooting:');
    console.log('1. Make sure you are in the PayRox project directory');
    console.log('2. Ensure developer-portal.html exists');
    console.log('3. Check that Node.js is properly installed');
    console.log('4. Try running from the main project directory');
    process.exit(1);
  }
}

// Launch the portal
launchPortal().catch(console.error);
