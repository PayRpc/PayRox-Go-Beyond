name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Run tests
      run: npm run test
    
    - name: Run coverage
      run: npm run coverage
    
    - name: Check contract sizes
      run: npm run size
    
    - name: Lint code
      run: npm run lint || true
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    # Temporarily disable security tools until properly configured
    # - name: Run Slither
    #   uses: crytic/slither-action@v0.3.0
    #   with:
    #     target: 'contracts/'
    #     slither-config: 'slither.config.json'
    #     fail-on: 'high'
    
    # - name: Run Mythril
    #   run: |
    #     pip install mythril
    #     myth analyze contracts/ --solv 0.8.20
    
    - name: Run production security tests
      run: npx hardhat test test/production-security.spec.ts

  deploy-testnet:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: false  # Disabled until secrets are configured
    
    environment: testnet
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy to testnet
      run: npm run deploy:testnet
      env:
        TESTNET_RPC_URL: ${{ secrets.TESTNET_RPC_URL }}
        DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

  deploy-mainnet:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: false  # Disabled until secrets are configured
    
    environment: mainnet
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy to mainnet
      run: npm run deploy:mainnet
      env:
        MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
        DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
    
    - name: Verify contracts
      run: npm run verify
      env:
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
